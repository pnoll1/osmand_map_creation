[tool.poetry]
name = "osmand-osm"
version = "0.1.0"
description = "OpenAddresses to OSM format converter for OSMAnd"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "osmand_osm"}]

[tool.poetry.dependencies]
python = "^3.8"
psycopg = {version = "^3.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-cov = "^4.0"
pytest-mock = "^3.10"

[tool.poetry.extras]
database = ["psycopg"]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=osmand_osm",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
markers = [
    "unit: marks tests as unit tests (fast, isolated)",
    "integration: marks tests as integration tests (slower, require external resources)",
    "slow: marks tests as slow running"
]

[tool.coverage.run]
source = ["osmand_osm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
precision = 2
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"